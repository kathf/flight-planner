//= require jquery
//= require jquery_ujs
//= require bootstrap
//= require_tree .


// send user's location to controller and calculate closest airport and set as @ways.origin
var setLocation = function () {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var cookie_val = position.coords.latitude + "|" + position.coords.longitude;
      document.cookie = "lat_lng=" + escape(cookie_val);
    });
  };
  console.log("location set");
}

// initialize google map and call function to create marker for origin airport (closest to user's location)
function initializeMap() {
  var myStyles = [
    {
      featureType: "water",
      elementType: "all",
      stylers: [
        { hue: "#009999" },
        { lightness: 0 }
      ]
    },{
      featureType: "landscape",
      elementType: "all",
      stylers: [
        { lightness: -100 }
      ]
    },{
      featureType: "all",
      elementType: "labels",
      stylers: [
        { visibility: "off" }
      ]
    },{
      featureType: "administrative",
      elementType: "geometry.fill",
      stylers: [
         { visibility: "off" }
      ]
    }
  ];

  var myOptions = {
    center: new google.maps.LatLng(39, 9),
    zoom: 2,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    minZoom: 1,
    maxZoom: 6,
    mapTypeControl: false,
    streetViewControl: false,
    panControl: false,
    zoomControl: true,
    zoomControlOptions: {
        style: google.maps.ZoomControlStyle.SMALL,
        position: google.maps.ControlPosition.LEFT_BOTTOM
    },
    scaleControl: false,
    styles: myStyles
  };

  var map = new google.maps.Map(document.getElementById("map-canvas"),
      myOptions);

  console.log("map initialized");

  $.getJSON('ways#index', function(response) {
    var origin = response.origin;
    var airportsForMarking = response.airports

    createOriginMarker(map, origin);
    createStopoverMarkers(map, airportsForMarking);
  });

}

// create marker for origin airport (closest to user's location)
function createOriginMarker(map, origin) {
  var latLng = new google.maps.LatLng(origin.latitude, origin.longitude);
  var marker = new google.maps.Marker({
      position: latLng,
      map: map,
      name: origin.name,
      iata: origin.iata,
      city: origin.city,
      country: origin.country_name,
      icon: 'http://maps.google.com/mapfiles/kml/pal3/icon53.png'
  });
  createInfoWindow(marker, map);
  console.log("origin marker set");
}

// add event listener to airport marker to display info window when clicked
function createInfoWindow(marker, map) {
  var contentString =
    marker.name+
    ' ('+
    marker.iata+
    ') '+
    marker.city+
    ', '
    marker.country;

    'gm-style-iw'

  google.maps.event.addListener(marker, 'click', function() {
    var infowindow = new google.maps.InfoWindow({ content: contentString });
    infowindow.open(map, marker);
    google.maps.event.addListener(map, 'click', function() {
      infowindow.close();
    });
  })
}

// create markers for selection of airports sent from ways controller
function createStopoverMarkers(map, airportsForMarking) {
  for (var i = 0; i < airportsForMarking.length; i++) {
      (function(airport) {
          var latLng = new google.maps.LatLng(airport.latitude, airport.longitude);

          var marker = new google.maps.Marker({
              position: latLng,
              map: map,
              name: airport.name,
              city: airport.city,
              iata: airport.iata,
              country: airport.country_name,
              icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_icon&chld=glyphish_airplane|FFFFFF'
          });

          createInfoWindow(marker, map);

      })(airportsForMarking[i]);
  };
  console.log("stopover markers set");
}


// event listeners

setLocation();

$(document).ready(function() {
  console.log("document ready");
});

$(window).load(function () {
  console.log("window load");
  initializeMap();
});
